name: Deploy Next.js site to Pages

on:
  # Trigger the workflow on pushes to the `main` branch or when manually triggered.
  push:
    branches: ["main"]
  workflow_dispatch:

# Define permissions for the GitHub token
permissions:
  contents: read
  pages: write
  id-token: write

# Limit concurrency to avoid multiple simultaneous deployments
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: github-pages  # Define the artifact name for deployment
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install --peer-deps" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci --legacy-peer-deps" >> $G_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build Next.js app
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Check artifact size
        run: du -sh ./out  # Ensure that the build directory size is reasonable (below 10GB)

      - name: Remove symlinks or hard links (if any)
        run: find ./out -type l -exec rm -f {} \;  # Remove symlinks

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages  # The name for the artifact
          path: ./out         # The directory to upload (e.g., static build output)

  # Deploy job
  deploy:
    needs: build  # Ensure the deploy job runs only after the build job finishes successfully
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages  # Make sure the name matches the artifact name uploaded in the build step

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages  # Match the artifact name from the upload step
